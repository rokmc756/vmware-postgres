- name: Create systemd service file of pirmary instance
  become: true
  become_user: postgres
  shell: ( cd /var/lib/pgsql ; source /var/lib/pgsql/.bash_profile ; {{ bin_dir }}/pg_autoctl -q show systemd --pgdata '/var/lib/pgsql/{{ workers_database }}' > pgautofailover.service )
  register: workers_systemd_service_added
  async: 180
  poll: 5

- debug: msg={{ workers_systemd_service_added }}
  when: inventory_hostname in groups['workers']
  tags:
    - print_debug

- name: Copy primary systemd service file of primary instance
  become: true
  become_user: root
  copy:
    src: /var/lib/pgsql/pgautofailover.service
    dest: /etc/systemd/system/
    owner: root
    group: root
    mode: 0644
    remote_src: true
  when: inventory_hostname in groups['workers']

- name: Reload and start primary systemd service of primary instance
  become: true
  systemd:
    daemon_reload: yes
    name: pgautofailover
    enabled: yes
  when: inventory_hostname in groups['workers']
  #  state: started

- name: Replace database directory
  become: true
  become_user: postgres
  replace:
    path: /var/lib/pgsql/.bash_profile
    regexp: '^(.*)PGDATA=(.*)$'
    replace: 'PGDATA=//var/lib/pgsql/{{ workers_database }}'
    backup: yes
  when: inventory_hostname in groups['workers']

- name: Verify the state of worker's instances
  become: true
  become_user: postgres
  shell: ( source ~/.bash_profile ; source /var/lib/pgsql/.bash_profile ; {{ bin_dir }}/pg_autoctl show state )
  register: workers_instance_state_verified
  when: inventory_hostname in groups['workers']

- debug: msg={{ workers_instance_state_verified }}
  when: inventory_hostname in groups['workers']
  tags:
    - print_debug

