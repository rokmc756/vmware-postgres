---
# Install pg_auto_failover for RHEL or CentOS

- name: Stop and disable firewalld
  become: true
  service:
    name: firewalld
    state: stopped
    enabled: false

- name: Flush iptables rules
  become: true
  become_user: root
  shell: ( iptables -F )
  register: iptables_rules_flushed

- name: List iptables rules
  become: true
  become_user: root
  shell: ( iptables -nL )
  register: iptables_rules_listed

- debug: msg={{ iptables_rules_listed.stdout }}
  tags:
    - print_debug

#- name: Add postgres group
#  group: name=postgres state=present
#
#- name: Add postgres user
#  user:
#    name: postgres
#    group: postgres
#    home: /var/lib/pgsql
#    shell: /bin/bash
#    password: "{{ 'changeme' | password_hash('sha512') }}"
#    # append: yes
#    # groups: sudo

#- name: Chown to postgres home directory
#  file:
#    path: /var/lib/pgsql
#    owner: postgres
#    group: postgres
#    mode: 0755

#
- name: Copy the vmwawre-postgres rpm file to all hosts in cluster
  copy: src={{ package_name }}-{{ major_version }}.{{ minor_version }}-{{ patch_version }}.{{ rhel_version }}.x86_64.rpm dest=/home/jomoon/{{ package_name }}-{{ major_version }}.{{ minor_version }}-{{ patch_version }}.{{ rhel_version }}.x86_64.rpm mode=0644 owner=jomoon group=jomoon

#
- name: Install VMware Postgres on all hosts as root
  become: true
  yum:
    name: /home/jomoon/{{ package_name }}-{{ major_version }}.{{ minor_version }}-{{ patch_version }}.{{ rhel_version }}.x86_64.rpm
    state: present
    disable_gpg_check: true
  async: 180
  poll: 5

#
- name: Make sure we have a 'wheel' group
  become: true
  group:
    name: wheel
    state: present

#
- name: Allow 'wheel' group to have passwordless sudo
  become: true
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

#
- name: Add postgres user to sudo group
  become: true
  shell: usermod -aG wheel postgres
  args:
    executable: /bin/bash

#
- name: Install Python3 Packages on All Nodes
  become: true
  yum:
    name: "{{ item }}"
    state: present
    skip_broken: yes
  async: 120
  poll: 5
  with_items:
    - epel-release
    - python3
    - python3-libs
    - python3-devel
    - python3-pip
    - python3-setuptools
    - yamllint
    - gcc
  when: install_dep_packages

#
- name: Install Python3 Packages on All Nodes
  become: true
  yum:
    name: "{{ item }}"
    state: present
    skip_broken: yes
  async: 120
  poll: 5
  with_items:
    - python3-utils
    - python3-PyYAML
    - daemonize
    - python3-pathspec
    - python3-rpm-generators
  when: install_dep_packages and hostvars[inventory_hostname].ansible_distribution_major_version|int >= 8

# when: install_dep_packages and rhel_version == "rhel8"
#    - python-psycopg2
#    - python34-setuptools
#    - python36-PyYAML
#    - python34
#    - python34-libs
#    - python36-pathspec
