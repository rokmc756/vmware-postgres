# Create instance for worker nodes
- name: Create workers instance. It will automatically be set by the monitor as the primary node with read-write capability (PGDATA = /var/lib/pgpsql/ha)
  become: true
  become_user: postgres
  shell: ( source /var/lib/pgsql/.bash_profile ; {{ bin_dir }}/pg_autoctl create postgres --pgdata '/var/lib/pgsql/{{ workers_database }}' --auth trust --ssl-self-signed --username ha-admin --dbname '{{ app_database }}' --hostname '{{ inventory_hostname }}' --pgctl {{ bin_dir }}/pg_ctl --monitor "postgres://autoctl_node@{{ hostvars[groups['monitor'][0]].ansible_hostname }}/pg_auto_failover?sslmode={{ sslmode }}" )
  register: workers_instance_created
  async: 300
  poll: 5
  register: monitor_state_verified
  args:
    chdir: "/var/lib/pgsql"
    executable: /bin/bash
  #  until: workers_instance_created is succeeded
  # retries: 20
  # delay: 20

#
- name: Create systemd service file of workers instance
  become: true
  become_user: postgres
  shell: ( source /var/lib/pgsql/.bash_profile ; {{ bin_dir }}/pg_autoctl -q show systemd --pgdata '/var/lib/pgsql/{{ workers_database }}' > pgautofailover.service )
  register: workers_systemd_service_added
  async: 180
  poll: 5
  args:
    chdir: "/var/lib/pgsql"
    executable: /bin/bash

#
- name: Copy primary systemd service file of workers instance
  become: true
  become_user: root
  copy:
    src: /var/lib/pgsql/pgautofailover.service
    dest: /etc/systemd/system/
    owner: root
    group: root
    mode: 0644
    remote_src: true

#
- name: Replace database directory for workers
  become: true
  become_user: postgres
  replace:
    path: /var/lib/pgsql/.bash_profile
    regexp: '^(.*)PGDATA=(.*)$'
    replace: 'PGDATA=//var/lib/pgsql/{{ workers_database }}'
    backup: yes

#
- name: Reload and start primary systemd service of workers instance
  become: true
  become_user: root
  systemd:
    name: pgautofailover
    state: started
    daemon_reload: yes
  register: pgautofailover_service_added
  async: 60
  poll: 5
  # until: pgautofailover_service_added is succeeded
  # retries: 10
  # delay: 10
  # enabled: yes
